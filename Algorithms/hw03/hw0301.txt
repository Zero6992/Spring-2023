Please first consider the following question: What are some good algorithms that can handle this? Just describe your strategy, don't write the code yet

description
When we think of the movie "Apocalypse Now," we often think of the desolate jungles of Vietnam and the brutality of war. But now, we're taking this classic film and moving it to a small town. In this town, there are many shops connected by undirected roads, and shops may be divided into several blocks, the shops within each block can reach any other shop in this block directly or indirectly. However, now some of these roads need to be under maintenance, which will cause certain shops to be unable to reach certain other shops. In this problem, you need to help Siang Ling to identify which roads are critical in order to prevent the collapse of commercial activity.

Input:
First line containing two integers, N and M. N represents the number of shops, which are numbered from 0 to N − 1, and M represents the number of edges. Following that, there will be
M lines, each containing two numbers separated by a space, a, b, represents a connection between shops a, and b. For all test data, it is guaranteed:
•
Ai != bi
• 0 ≤ ai, bi ≤ N − 1
• 2 ≤ N ≤ 10^5
• N-1 ≤ M ≤ N(N − 1)/2 ≤ 10^6
There are no repeated connections.

Output:
Output all roads that, if under maintenance, will cause certain shops to be unable to reach certain other shops. The output format should be the two shop numbers connected by the road, listed in ascending order of their numbers, means that a <b¿. Each road listed in ascending order by a. If there are two edges with the same a, then they should be ordered by b, in ascending order. If there are no critical road, output "No Critical Road".
example 1
Input:
4 4
0 1
1 2
2 0
1 3
Output:
1 3

example 2
Input:
4 3
0 1
1 2 
2 3
Output:
0 1
1 2
2 3

example 3
Input:
8 13
0 4
0 3
0 5
1 7
1 3
1 5
2 5
2 4
2 7
2 6
4 6
5 7
5 6
Output:
No Critical Road

10 11
2 4
2 7
2 5
5 7
5 8
5 6
6 9 
6 3
3 9
1 3
0 1