Help me fix the code below 
"""
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int MAXN = 1005;
int n, m;
int fa[MAXN];

struct Edge {
    int u, v, w;
    bool operator<(const Edge &e) const {
        return w < e.w;
    }
} edges[500005];

int find(int x) {
    if (fa[x] == x) return x;
    return fa[x] = find(fa[x]);
}

vector<int> path;
bool dfs(int u, int v, vector<vector<int>> &adj, vector<bool> &visited) {
    visited[u] = true;
    if (u == v) return true;
    for (int i = 0; i < adj[u].size(); i++) {
        int e = adj[u][i];
        int next = edges[e].u == u ? edges[e].v : edges[e].u;
        if (!visited[next]) {
            path.push_back(e);
            if (dfs(next, v, adj, visited)) return true;
            path.pop_back();
        }
    }
    return false;
}

int main() {
    cin >> n >> m;
    for (int i = 1; i <= n; i++) fa[i] = i;
    for (int i = 0; i < m; i++) {
        cin >> edges[i].u >> edges[i].v >> edges[i].w;
    }
    sort(edges, edges + m);
    vector<vector<int>> adj(n + 1);
    vector<bool> used(m);
    int ans = 0;
    for (int i = 0; i < m; i++) {
        int u = edges[i].u, v = edges[i].v, w = edges[i].w;
        int fu = find(u), fv = find(v);
        if (fu != fv) {
            fa[fu] = fv;
            ans += w;
            used[i] = true;
            adj[u].push_back(i);
            adj[v].push_back(i);
        }
    }
    for (int i = 1; i <= n; i++) fa[i] = i;
    for (int i = 0; i < m; i++) {
        if (!used[i]) {
            int u = edges[i].u, v = edges[i].v, w = edges[i].w;
            vector<bool> visited(n + 1);
            path.clear();
            dfs(u, v, adj, visited);
            int min_e = -1;
            for (int j = 0; j < path.size(); j++) {
                if (min_e == -1 || edges[path[j]].w < edges[min_e].w) {
                    min_e = path[j];
                }
            }
            if (edges[min_e].w < w) {
                ans += w - edges[min_e].w;
                used[min_e] = false;
                used[i] = true;
                adj[edges[min_e].u].erase(find(adj[edges[min_e].u].begin(), adj[edges[min_e].u].end(), min_e));
                adj[edges[min_e].v].erase(find(adj[edges[min_e].v].begin(), adj[edges[min_e].v].end(), min_e));
                adj[u].push_back(i);
                adj[v].push_back(i);
            }
        }
    }
    cout << ans << endl;
    return 0;
}
"""

the code I provide is wrong in example 3, which should output 77 but the code output is 80

"""
example 1:

Input:
10 9
1 2 5
2 7 7
7 10 11
6 10 6
2 8 9
7 9 8
5 7 4
4 5 2
3 5 3
Expected Output:
55


example 2:
Input:
5 7
1 2 5
1 3 6
1 4 13
1 5 7
2 4 12
3 4 9
4 5 3
Expected Output:
41

example 3:
Input:
8 15
1 2 3
1 3 5
2 4 7
2 5 9
2 7 1
1 7 12
4 5 8
4 7 13
6 8 6
2 6 11
3 6 2
2 8 4
2 3 10
1 8 14
1 4 15

Expected Output 
77
"""

Fix the code